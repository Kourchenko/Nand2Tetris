// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Or.hdl

 /**
 * Or gate:
 * out = 1 if (a == 1 or b == 1)
 *       0 otherwise
 */

CHIP Or {
    IN a, b;
    OUT out;

    PARTS:
    //  OR Gate Truth Table
    //    a   b   out
    //    0   0    0
    //    0   1    1
    //    1   0    1
    //    1   1    1
    //
    // 0 0 1
    // 0 1 1
    // 1 0 1
    // 1 1 0
    // 
    // Nand() only returns 0 if all inputs == 1.
    // Or() returns 1 if at least 1 input == 1.
    // Reversing it with a Not() Gate will do the trick.
    //
    // Not(in=a, out=nota);
    // Not(in=b, out=notb);
    // Nand(a=nota, b=notb, out=out);
    
    // Implemented using basic gates, for proof that
    // all future gates can be built using only Nand() Gates
    Nand(a=a, b=a, out=outa);
    Nand(a=b, b=b, out=outb);
    Nand(a=outa, b=outb, out=out);
}
